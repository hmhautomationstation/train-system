#include <ArduinoRS485.h> // ArduinoModbus depends on the ArduinoRS485 library
#include <ArduinoModbus.h>
#include <Ethernet.h>

byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xE8 }; // Ethernet MAC Address
IPAddress ip(192,168,1,140); // Ethernet MAC IP address

EthernetClient client;
ModbusTCPClient modbusTCPClient(client);

IPAddress server(192,168,1,25); // update with the IP Address of your Modbus server

void setup() {

   Serial.begin(9600);

//  // start the Ethernet connection:
 if (Ethernet.begin(mac) == 0) {
   Serial.println("Failed to configure Ethernet using DHCP");

   // try to congifure using IP address :
   Ethernet.begin(mac, ip);
 } else {
   Serial.print("  DHCP assigned IP ");
   Serial.println(Ethernet.localIP());
 }

 // give the Ethernet shield a second to initialize:
 delay(1000);
 Serial.print("connecting to ");
 Serial.print(server);
 Serial.println("...");

//   if you get a connection, report back via serial:
 if (client.connect(server, 502)) {
   Serial.print("connected to ");
   Serial.println(client.remoteIP());
   client.println("Connection: close");
   client.println();
 } else {
   // if you didn't get a connection to the server:
   Serial.println("connection failed");
 }
//  
   Serial.println("Modbus TCP Client Toggle");
       
   Ethernet.begin(mac, ip);  // initialize Ethernet device

   delay(3000);

}

void loop() {

 long regStatus[10];
 long regRaw[10]; 

 long regStatusTest,regStatusTest2;
 String readString;
 long Address;
 
 if (!modbusTCPClient.connected()) {
   // client not connected, start the Modbus TCP client
   Serial.println("Attempting to connect to Modbus TCP server");
   
   if (!modbusTCPClient.begin(server)) {
     Serial.println("Modbus TCP Client failed to connect!");
   } else {
     Serial.println("Modbus TCP Client connected");
   }
 } else {
//     client connected

//////////////////TEST///////////////////////////////////////////////////

while (Serial.available()) {
 delay(2);
 char c = Serial.read();
 readString += c;
}
if (readString.length() > 0) {
 Serial.println(readString);
 Address = atol(readString.c_str());
 Serial.println(Address);
}

   regStatusTest = modbusTCPClient.holdingRegisterRead(Address);
   Serial.print("regStatusTest = ");
   Serial.println(regStatusTest);
   regStatusTest2 = modbusTCPClient.holdingRegisterRead(Address);
   Serial.print("regStatusTest2 = ");
   Serial.println(regStatusTest2);

////////////////End Of TEST //////////////////////////////////////////////
   
   // wait for 1 second
   delay(1000);
 }
}